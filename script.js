function b(c,d){const e=a();return b=function(f,g){f=f-0x7f;let h=e[f];return h;},b(c,d);}const F=b;(function(c,d){const n=b,e=c();while(!![]){try{const f=parseInt(n(0x82))/0x1*(-parseInt(n(0x87))/0x2)+-parseInt(n(0xbb))/0x3*(parseInt(n(0x9c))/0x4)+parseInt(n(0xa6))/0x5+-parseInt(n(0xa3))/0x6+parseInt(n(0x9d))/0x7+parseInt(n(0xb8))/0x8*(parseInt(n(0xb9))/0x9)+parseInt(n(0xb3))/0xa;if(f===d)break;else e['push'](e['shift']());}catch(g){e['push'](e['shift']());}}}(a,0xd97d0));let map,geojsonLayer,geojsonCapital,targetCountry;function a(){const H=['type','prev-country','getElementById','1391730JBaBGX','onkeydown','features','2118295WnODoL','coordinates','score','Hint:\x20The\x20target\x20country\x20starts\x20with\x20\x22','tileLayer','geoJSON','Games\x20played:\x20','geometry','&copy;\x20<a\x20href=\x22https://www.openstreetmap.org/copyright\x22>OpenStreetMap</a>\x20contributors','round','https://raw.githubusercontent.com/datasets/geo-countries/master/data/countries.geojson','iso3','\x20km.\x20Try\x20again!','7769890cunjdf','sqrt','toGeoJSON','random','feature','40ptDXAO','2067480HsyJbj','map','48xiflik','json','which','sin','length','result',',\x200,\x20','162003axMURE','setStyle','white','https://raw.githubusercontent.com/Stefie/geojson-world/refs/heads/master/capitals.geojson','MultiPolygon','10PACqKY','hint','textContent','rgb(','https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png','toLowerCase','ADMIN','Polygon','ISO_A3','then','eachLayer','Correct!\x20You\x20found\x20','The\x20previous\x20game\x27s\x20country\x20is\x20\x22','Country\x20not\x20found.\x20Try\x20again.','keyCode','find','\x20guesses!','properties','atan2','country-input','value','172208PeuZIN','1906702ymXstj','cos','floor'];a=function(){return H;};return a();}const maxDistance=0x2710;let guessCount=0x0,totalGuesses=0x0,gamesPlayed=0x0;function initMap(){const o=b;map=L[o(0xba)](o(0xba),{'boxZoom':![],'scrollWheelZoom':![],'zoomControl':![],'doubleClickZoom':![]})['setView']([0x0,0x0],0x2),L[o(0xaa)](o(0x8b),{'attribution':o(0xae)})['addTo'](map);}function loadCountries(){const p=b;fetch(p(0x85))[p(0x90)](c=>c[p(0xbc)]())[p(0x90)](c=>{geojsonCapital=c;}),fetch(p(0xb0))[p(0x90)](c=>c[p(0xbc)]())[p(0x90)](c=>{const q=p;geojsonLayer=L[q(0xab)](c,{'style':defaultStyle,'onEachFeature':onEachFeature})['addTo'](map),startNewGame();});}function defaultStyle(c){const r=b;return{'fillColor':'#cccccc','weight':0x1,'opacity':0x1,'color':r(0x84),'fillOpacity':0x1};}function onEachFeature(c,d){d['on']('click',function(){const s=b;makeGuess(c[s(0x98)]['ADMIN']);});}function getRandomCountry(){const t=b,c=geojsonLayer[t(0xb5)]()['features'];while(!isValidCountry){const d=c[Math[t(0x9f)](Math[t(0xb6)]()*c[t(0x7f)])][t(0x98)],e=geojsonCapital[t(0xa5)][t(0x96)](f=>f[t(0x98)][t(0xb1)]===d[t(0x8f)]);e&&(targetCountry=d['ADMIN'],isValidCountry=!![]);}}function startNewGame(){const u=b;geojsonLayer[u(0x83)](defaultStyle),isValidCountry=![],getRandomCountry(),document['getElementById'](u(0x88))['textContent']=u(0xa9)+targetCountry[0x0]+'\x22',document[u(0xa2)]('result')[u(0x89)]='',document[u(0xa2)](u(0xa1))[u(0x89)]='',guessCount=0x0,updateScore();}function giveUp(){const v=b;geojsonLayer[v(0x83)](defaultStyle),document['getElementById'](v(0xa1))['textContent']=v(0x93)+targetCountry+'\x22',isValidCountry=![],getRandomCountry(),document[v(0xa2)](v(0x88))[v(0x89)]=v(0xa9)+targetCountry[0x0]+'\x22',document['getElementById'](v(0x80))[v(0x89)]='',guessCount=0x0,updateScore();}function makeGuess(c=''){const w=b;!c&&(c=document['getElementById'](w(0x9a))[w(0x9b)]);const d=geojsonLayer[w(0xb5)]()[w(0xa5)][w(0x96)](h=>h[w(0x98)][w(0x8d)][w(0x8c)]()===c['toLowerCase']());if(!d){document['getElementById'](w(0x80))[w(0x89)]=w(0x94);return;}guessCount++,totalGuesses++;const e=geojsonLayer['toGeoJSON']()[w(0xa5)][w(0x96)](h=>h['properties'][w(0x8d)]===targetCountry),f=getCapitalDistance(d,e),g=getColor(f);geojsonLayer[w(0x91)](h=>{const x=w;h[x(0xb7)]['properties']['ADMIN']===d[x(0x98)][x(0x8d)]&&h['setStyle']({'fillColor':g,'fillOpacity':0x1});}),d[w(0x98)]['ADMIN']===targetCountry?(document['getElementById']('result')[w(0x89)]=w(0x92)+targetCountry+'\x20in\x20'+guessCount+w(0x97),gamesPlayed++,updateScore()):document[w(0xa2)]('result')[w(0x89)]='Not\x20quite.\x20This\x20is\x20'+d[w(0x98)][w(0x8d)]+'.\x20The\x20distance\x20is\x20about\x20'+Math[w(0xaf)](f)+w(0xb2),document[w(0xa2)]('country-input')[w(0x9b)]='';}function getCapitalDistance(c,d){const y=b,e=c[y(0x98)]['ISO_A3'],f=d['properties']['ISO_A3'],g=geojsonCapital[y(0xa5)][y(0x96)](k=>k['properties']['iso3']===e),h=geojsonCapital[y(0xa5)]['find'](k=>k[y(0x98)][y(0xb1)]===f),i=g[y(0xad)][y(0xa7)],j=h['geometry']['coordinates'];return calculateHaversineDistance(i[0x1],i[0x0],j[0x1],j[0x0]);}function getDistance(c,d){const z=b,e=calculateCentroid(c[z(0xad)]),f=calculateCentroid(d['geometry']);return calculateHaversineDistance(e[0x1],e[0x0],f[0x1],f[0x0]);}function calculateCentroid(c){const A=b;if(c[A(0xa0)]===A(0x8e))return calculatePolygonCentroid(c[A(0xa7)][0x0]);else{if(c['type']===A(0x86))return calculatePolygonCentroid(c[A(0xa7)][0x0][0x0]);}return[0x0,0x0];}function calculatePolygonCentroid(c){const B=b;let d=0x0,e=0x0,f=0x0;for(let g=0x0;g<c[B(0x7f)]-0x1;g++){const [h,j]=c[g],[k,l]=c[g+0x1],m=h*l-k*j;d+=m,e+=(h+k)*m,f+=(j+l)*m;}return d/=0x2,e=e/(0x6*d),f=f/(0x6*d),[e,f];}function calculateHaversineDistance(d,e,f,g){const C=b,h=0x18e3,i=(f-d)*Math['PI']/0xb4,j=(g-e)*Math['PI']/0xb4,k=Math[C(0xbe)](i/0x2)*Math[C(0xbe)](i/0x2)+Math[C(0x9e)](d*Math['PI']/0xb4)*Math[C(0x9e)](f*Math['PI']/0xb4)*Math[C(0xbe)](j/0x2)*Math['sin'](j/0x2),l=0x2*Math[C(0x99)](Math[C(0xb4)](k),Math[C(0xb4)](0x1-k));return h*l;}function getColor(c){const D=b,d=Math['min'](c/maxDistance,0x1),e=Math[D(0x9f)](0xff*(0x1-d)),f=Math[D(0x9f)](0xff*d);return D(0x8a)+e+D(0x81)+f+')';}function updateScore(){const E=b,c=totalGuesses/(gamesPlayed||0x1);document['getElementById'](E(0xa8))[E(0x89)]=E(0xac)+gamesPlayed+'\x20|\x20Average\x20guesses:\x20'+c['toFixed'](0x2);}initMap(),loadCountries(),document[F(0xa4)]=function(c){const G=F;var d=c?c[G(0xbd)]?c[G(0xbd)]:c['keyCode']:event[G(0x95)];d==0xd&&makeGuess();};